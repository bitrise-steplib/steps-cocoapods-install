format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - STEP_VERSION: 1.7.2
  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  # ----------------------------------------------------------------
  # --- workflow to Step Test
  simple_test:
    steps:
    - path::./:
        inputs:
        - podfile_path: $PODFILE_PTH

  _test_with_repo:
    envs:
    # define this!
    - REPO_URL: $REPO_URL
    - TEST_REPO_BRANCH: $TEST_REPO_BRANCH
    - PODFILE_PTH: $PODFILE_PTH
    steps:
    - change-workdir:
        inputs:
        - path: "${ORIG_BITRISE_SOURCE_DIR}"
        - is_create_path: "false"
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf ./_tmp

            git clone "${REPO_URL}" ./_tmp --branch "${TEST_REPO_BRANCH}"
    - change-workdir:
        title: Switch working dir to test/_tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file', which would work for local tests
          but not if the step is included in another bitrise.yml!
        inputs:
        - path: "${ORIG_BITRISE_SOURCE_DIR}/_tmp"
        - is_create_path: "false"
    - path::./:
        inputs:
        - podfile_path: $PODFILE_PTH

  test_with_no_podfile_lock:
    envs:
    # With Only Gemfile (no Podfile.lock):
    - REPO_URL: https://github.com/bitrise-samples/ios-cocoapods-1.x-Gemfile.git
    - TEST_REPO_BRANCH: no-podfile-lock
    - PODFILE_PTH: ''
    after_run:
    - _test_with_repo
  test_with_gemfile:
    envs:
    # With Gemfile:
    - REPO_URL: https://github.com/bitrise-samples/ios-cocoapods-1.x-Gemfile.git
    - TEST_REPO_BRANCH: master
    - PODFILE_PTH: ''
    after_run:
    - _test_with_repo
  test_without_gemfile:
    envs:
    # Without Gemfile:
    - REPO_URL: https://github.com/bitrise-samples/ios-cocoapods-1.x.git
    - TEST_REPO_BRANCH: master
    - PODFILE_PTH: ''
    after_run:
    - _test_with_repo
  test_podfile_at_root:
    envs:
    # Podfile is in repo root
    - REPO_URL: https://github.com/bitrise-samples/ios-cocoapods-at-root.git
    - TEST_REPO_BRANCH: master
    - PODFILE_PTH: ''
    after_run:
    - _test_with_repo
  test_without_gemfile_with_podfile_path:
    envs:
    # Without Gemfile:
    - REPO_URL: https://github.com/bitrise-samples/ios-cocoapods-1.x.git
    - TEST_REPO_BRANCH: master
    - PODFILE_PTH: 'CocoaPods1X/Podfile'
    after_run:
    - _test_with_repo

  test_without_verbose:
    steps:
    - path::./:
        inputs:
        - podfile_path: $PODFILE_PTH
        - verbose: false

  print_cache_paths:
    steps:
    - script:
        title: Export go files to test
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            echo $BITRISE_CACHE_INCLUDE_PATHS

  test:
    before_run:
    - go-tests
    after_run:
    - test_with_no_podfile_lock
    - test_with_gemfile
    - test_without_gemfile
    # - test_podfile_at_root
    - test_without_gemfile_with_podfile_path
    - test_without_verbose
    - print_cache_paths

  go-tests:
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:

  # ----------------------------------------------------------------
  # --- Utility workflows
  godeps-update:
    title: Godeps update
    description: |
      Used for updating bitrise dependencies with godep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get -u -v github.com/tools/godep
            #
            rm -rf ./Godeps
            rm -rf ./vendor
            #
            go get -t -d ./...
            go get github.com/davecgh/go-spew/spew
            go get github.com/pmezard/go-difflib/difflib
            godep save ./...

  # ----------------------------------------------------------------
  # --- workflows to create Release
  create-release:
    steps:
    - script:
        title:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get -u github.com/bitrise-tools/releaseman
            export CI=true
            releaseman create --version $STEP_VERSION

  # ----------------------------------------------------------------
  # --- workflow to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - STEP_ID_IN_STEPLIB: cocoapods-install
      - STEP_GIT_VERION_TAG_TO_SHARE: $STEP_VERSION
      - STEP_GIT_CLONE_URL: https://github.com/bitrise-io/steps-cocoapods-install.git
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}
            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}
            bitrise share finish
